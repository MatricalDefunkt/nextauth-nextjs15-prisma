name: Lint, Build and Deploy to Azure

on:
  push:
    branches: [ main, dev, staging ]
  pull_request:
    branches: [ main, dev, staging ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - staging
          - production

jobs:
  lint-and-build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'
    
    - name: Install pnpm
      uses: pnpm/action-setup@v3
      with:
        version: 8
        run_install: false
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Lint
      run: pnpm lint
    
    - name: Prisma Generate
      run: pnpm prisma generate
    
    - name: Build
      run: pnpm build
      env:
        AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
        AZURE_DB_URL: ${{ secrets.AZURE_DB_URL }}
        AUTH_GITHUB_ID: ${{ secrets.AUTH_GITHUB_ID }}
        AUTH_GITHUB_SECRET: ${{ secrets.AUTH_GITHUB_SECRET }}
    
    - name: Upload build artifacts
      uses: actions/upload-artifact
      with:
        name: build-output
        path: |
          .next
          package.json
          pnpm-lock.yaml
          next.config.ts
          prisma/
          public/
          .azure/
  
  deploy-development:
    needs: lint-and-build
    runs-on: ubuntu-latest
    environment: development
    if: github.ref == 'refs/heads/dev' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'development')
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-output
    
    - name: Copy environment config
      run: cp .azure/environments/development.json .azure/config.json
    
    - name: Deploy to Azure Web App (Development)
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: .

  deploy-staging:
    needs: lint-and-build
    runs-on: ubuntu-latest
    environment: staging
    if: github.ref == 'refs/heads/staging' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging')
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-output
    
    - name: Copy environment config
      run: cp .azure/environments/staging.json .azure/config.json
    
    - name: Deploy to Azure Web App (Staging)
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: .

  deploy-production:
    needs: lint-and-build
    runs-on: ubuntu-latest
    environment: production
    if: github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production')
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-output
    
    - name: Copy environment config
      run: cp .azure/environments/production.json .azure/config.json
    
    - name: Deploy to Azure Web App (Production)
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: .
